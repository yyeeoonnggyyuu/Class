객체지향은 무엇인가

절차지향적 - 했던일을 반복함 코드가 너무 길어짐
            매개변수만달라짐 함수는 똑같고
            순차적으로 코드를 짜면 길어지고 변경사항이 있을경우 다 찾아서 하려니 힘듬

반복되는 행위를 어떻게하면 단순하고 줄일까.

함수를 메서드를 만들었으나 이것도 한계가 있다

획기적으로 쭐이자해서

모든것을 객체화 시키자 .

그래서 class를 통해서 객체를 만든다

자바는 객체 와 클래스를 이해해야함!!!

객체지향은 절체지향이라너무 복잡해 세상 모든것을 객체화시켜서 객체화개념으로 보자

객체냐 아니야 -사람 > 먹는다 잔다 
                텀블러 > 담는다 

자바는 - 필드와 매서드
    필드가 존재한다는 형태가 존재한다는
    매서드(함수) 가 존재해야한다

객체지향적사고방식 

엔진은 객체 - 기름을 받아서  에너지를 생성해서?
바퀴는 객체 - 매서드 -돈다 ,
객체!- 매서드
형태가 있어야 한다 쓰임이 있어야한다

자동차 - 엔진을 교체하면 성능이 좋아짐 - 객체를바꾼것
       - 엔진이 가지고 있는 부품 - 객체
       -  모든사물의 객체화   



 (1) 캡슐화(encapsulation) : 관련 데이터와 알고리즘(코드)이 하나의 묶음으로 정리된 것으로서 개발자가 만들었으며, 관련된 코드와 데이터가 묶여있고 오류가 없어 사용이 편리하다. 
                            데이터를 감추고 외부 세계와의 상호작용은 메소드(Method)를 통하는 방법인데, 라이브러리로 만들어 업그레이드하면 쉽게 바꿀 수 있다. 
                            ‘메소드’는 메시지에 따라 실행시킬 프로시저로서 객체 지향 언어에서 사용되는 것으로서, 
                            객체 지향 언어에서는 메시지를 보내 메소드를 수행시킴으로써 통신(communication)을 수행한다.

(2) 상속(inheritance) : 상속은 이미 작성된 클래스를 이어 받아서 새로운 클래스를 생성하는 기법으로 기존 코드를 재활용해서 사용하는 것을 의미한다. 
                        객체기술의 가장 핵심이 되는 개념으로 프로그램을 쉽게 확장할 수 있도록 해주는 강력한 수단이 된다. 
(3) 다형성(polymorphism) : 다형성이란 하나의 이름(방법)으로 많은 상황에 대처하는 기법이다. 
                            개념적으로 동일한 작업을 하는 함수들에 똑같은 이름을 부여할 수 있으므로 코드가 간단해지는 효과가 있다.







